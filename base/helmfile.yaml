---
repositories:
- name: jetstack
  url: https://charts.jetstack.io
- name: "kubernetes-incubator"
  url: "https://charts.helm.sh/incubator"
- name: "argo"
  url: "https://argoproj.github.io/argo-helm"
- name: "1password"
  url: "https://1password.github.io/connect-helm-charts"
- name: oauth2-proxy
  url: "https://oauth2-proxy.github.io/manifests"
- name: ingress-nginx
  url: https://kubernetes.github.io/ingress-nginx

environments:
  default:
    values:
    - y8s:
        default_issuer: selfsigned
        domain: local.ycloud.rocks
        ingress_enabled: false
        platform_services_repo: https://github.com/wyattwalter/y8s
        platform_services_dir: platform-services
        platform_services_target_revision: HEAD
    - env-override.yaml

releases:
- name: cert-manager
  namespace: cert-manager
  chart: jetstack/cert-manager
  version: 'v1.8.2'
  wait: true
  set:
  - name: installCRDs
    value: true

- name: 'cert-manager-issuers'
  needs: ['cert-manager/cert-manager', '1password/1password']
  chart: "kubernetes-incubator/raw"
  namespace: "cert-manager"
  cleanupOnFail: true
  labels:
    component: "cert-manager"
    namespace: "cert-manager"
  disableValidationOnInstall: true # see commit https://github.com/roboll/helmfile/commit/1ef9b29f6dce765e3a083e90467581ad2e6fccc6
  values:
  - resources:
    - apiVersion: cert-manager.io/v1
      kind: ClusterIssuer
      metadata:
        name: selfsigned
      spec:
        selfSigned: {}

- name: 1password
  needs: ['cert-manager/cert-manager']
  namespace: 1password
  chart: 1password/connect
  version: '1.7.1'
  wait: true
  timeout: 120
  values:
  - connect:
      credentials: {{ requiredEnv "ONEPASSWORD_CREDENTIALS" | toYaml }}
  - operator:
      create: true
      roleBinding:
        create: true
      serviceAccount:
        create: true
      watchNamespace: []
      token:
        value: {{ requiredEnv "ONEPASSWORD_TOKEN" | quote }}

- name: ingress-nginx
  needs: ['cert-manager/cert-manager']
  namespace: ingress-nginx
  chart: ingress-nginx/ingress-nginx
  version: '4.11.3'
  installed: {{ .Values.y8s.ingress_enabled }}
  values:
  - controller:
      metrics:
        enabled: true

- name: argocd
  needs: ['cert-manager/cert-manager']
  namespace: argocd
  chart: argo/argo-cd
  version: '4.9.8'
  disableValidationOnInstall: true # see commit https://github.com/roboll/helmfile/commit/1ef9b29f6dce765e3a083e90467581ad2e6fccc6
  values:
  - server:
      certificate:
        enabled: true
        domain: "argocd.{{ .Values.y8s.domain }}"
        issuer:
          kind: ClusterIssuer
          name: {{ .Values.y8s.default_issuer }}
      extraArgs:
      - --insecure
      ingress:
        annotations:
          cert-manager.io/cluster-issuer: {{ .Values.y8s.default_issuer }}
        enabled: true
        https: true
        ingressClassName: nginx
        hosts:
        - argocd.{{ .Values.y8s.domain }}
        tls:
        - hosts:
          - argocd.{{ .Values.y8s.domain }}
          secretName: argocd-cert

- name: platform-services
  needs: ['argocd/argocd']
  chart: "kubernetes-incubator/raw"
  namespace: argocd
  cleanupOnFail: true
  values:
  - resources:
    - apiVersion: argoproj.io/v1alpha1
      kind: Application
      metadata:
        name: platform-services
      spec:
        project: default
        source:
          repoURL: {{ .Values.y8s.platform_services_repo }}
          targetRevision: {{ .Values.y8s.platform_services_target_revision }}
          path: {{ .Values.y8s.platform_services_dir }}
        destination:
          server: https://kubernetes.default.svc
        syncPolicy:
          automated: {}
